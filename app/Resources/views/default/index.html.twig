{% extends 'base.html.twig' %}

{% block stylesheets %}
    {{ parent() }}
    <style>
        .js-form-item {
            padding-bottom: 40px;
        }

        .js-menu-item-wrapper {
            box-shadow: 0 -1px 5px 0;
        }

        .js-menu-item {
            margin-bottom: 0 !important;
        }

        .js-item-card-title {
            text-align: center;
        }

        .js-item-title {
            text-align: center;
        }

        .js-document-wrapper {
            margin-bottom: 30px;
        }

        .js-payment-status-list-item,
        .js-payment-status-total {
            text-align: right;
        }

        .js-payment-status-total {
            font-weight: bold;
            font-style: italic;
        }

        .blue {
            background-color: #DEF0F2;
        }

        .green {
            background-color: #CCDEC6;
        }

        .brown {
            background-color: #9C9E90;
        }

        .red {
            background-color: #E2B699;
        }

        .orange {
            background-color: #FBE6C7;
        }
    </style>
{% endblock %}

{% import ':macro:macro.html.twig' as macros %}

{% block body %}
    <div class="js-menu">


        <div class="js-menu-item-wrapper blue">
            <h2 class="display-4 js-menu-item">documents</h2>
            <div style="display:none;">
                <p class="col-1 lead js-form-menu-item">add</p>
                <div class="js-item card-block">
                    <div data-url="{{ path('document') }}" class="js-form-item" style="display:none;">
                        {% include ':forms:document.html.twig' %}
                    </div>
                    <div class="js-document-wrapper">
                        {% for document in documents %}
                            {{ macros.document(document) }}
                        {% endfor %}
                    </div>
                </div>
            </div>
        </div>


        <div class="js-menu-item-wrapper green">
            <h2 class="display-4 js-menu-item">payments</h2>
            <div  style="display:none;">
                <p class="col-1 lead js-form-menu-item">add</p>
                <div class="js-item card-block">
                    <div data-url="{{ path('new', {'_object': 'Payment'}) }}" class="js-form-item" style="display:none;">
                        {% include ':forms:payment.html.twig' %}
                    </div>
                    <div class="js-payment-status-wrapper">
                        <div class="btn-group btn-group-lg js-payment-status-buttons-wrapper" role="group" aria-label="Basic example">
                            <button type="button" class="btn btn-secondary col-sm-4">Base</button>
                            <button type="button" class="btn btn-secondary col-sm-4">IDR</button>
                            <button type="button" class="btn btn-secondary col-sm-4">EUR</button>
                        </div>
                        <div class="js-payment-status-list-wrapper">
                            {% for paymentBlock in paymentStatus %}
                                <div class="card">
                                    <p style="text-align: center; font-weight: bolder;">{{ paymentBlock['title'] }}</p>
                                </div>
                                <table class="col-12" border="1">
                                    <tbody>
                                    {% for payment in paymentBlock['PaymentStatus'] %}
                                        {{ macros.paymentStatusList(payment) }}
                                    {% endfor %}
                                    <tr>
                                        <td><b><i>total:</i></b></td>
                                        <td class="js-payment-status-total"
                                            data-total-idr="IDR {{ paymentBlock['total']['IDR'] }}"
                                            data-total-eur="â‚¬ {{ paymentBlock['total']['EUR'] }}"
                                        >
                                            IDR {{ paymentBlock['total']['IDR'] }}
                                        </td>
                                    </tr>
                                    </tbody>
                                </table>
                            {% endfor %}
                        </div>
                    </div>
                </div>
            </div>
        </div>


        <div class="js-menu-item-wrapper brown">
            <h2 class="display-4 js-menu-item">budget</h2>
            <div  style="display:none;">


            </div>
        </div>


        <div class="js-menu-item-wrapper red">
            <h2 class="display-4 js-menu-item">collection</h2>
            <div style="display:none;">


                <div class="js-menu-item-wrapper">
                    <h2 class="display-4 js-menu-item">transport</h2>
                    <div style="display:none;">
                        <p class="col-1 lead js-form-menu-item">add</p>
                        <div class="js-item card-block">
                            <div data-url="{{ path('new', {'_object': 'Transport'}) }}" class="js-form-item" style="display:none;">
                                {% include ':forms:transport.html.twig' %}
                            </div>
                            <div class="js-transport-wrapper">
                                {% for transport in transports %}
                                    {{ macros.transport(transport, 'Collection') }}
                                {% endfor %}
                            </div>
                        </div>
                    </div>
                </div>


                <div class="js-menu-item-wrapper">
                    <h2 class="display-4 js-menu-item">hotels</h2>
                    <div style="display:none;">
                        <p class="col-1 lead js-form-menu-item">add</p>
                        <div class="js-item card-block">
                            <div data-url="{{ path('new', {'_object': 'Hotel'}) }}" class="js-form-item" style="display:none;">
                                {% include ':forms:hotel.html.twig' %}
                            </div>
                            <div class="js-hotel-wrapper">
                                {% for hotel in hotels %}
                                    {{ macros.hotel(hotel, 'Collection') }}
                                {% endfor %}
                            </div>
                        </div>
                    </div>
                </div>


                <div class="js-menu-item-wrapper">
                    <h2 class="display-4 js-menu-item">attractions</h2>
                    <div style="display:none;">
                        <p class="col-1 lead js-form-menu-item">add</p>
                        <div class="js-item card-block">
                            <div data-url="{{ path('new', {'_object': 'Attraction'}) }}" class="js-form-item" style="display:none;">
                                {% include ':forms:attraction.html.twig' %}
                            </div>
                            <div class="js-attraction-wrapper">
                                {% for attraction in attractions %}
                                    {{ macros.attraction(attraction, 'Collection') }}
                                {% endfor %}
                            </div>
                        </div>
                    </div>
                </div>


            </div>
        </div>


        <div class="js-menu-item-wrapper orange">
            <h2 class="display-4 js-menu-item">itinerary</h2>
            <div class="js-item js-itinerary-wrapper card-block">
                {% for item in itinerary if "now" | date('Y-m-d') <= item.startsAt | date('Y-m-d') %}
                    {{ macros.itinerary(item) }}
                {% endfor %}
                <div class="card card-block">
                    <h2 style="text-align: center;" class="display-4">Past</h2>
                </div>
                {% for item in itinerary if "now" | date('Y-m-d') > item.startsAt | date('Y-m-d') %}
                    {{ macros.itinerary(item) }}
                {% endfor %}
            </div>
        </div>


    </div>
{% endblock %}

    {% block javascripts %}
        {{ parent() }}
        <script>
            var variables = {
                'changes': {
                    'paymentStatusList': false,
                    'itinerary': false
                },
                'rates': {
                    'euridr': {{ fixer.EURIDR }},
                    'gbpidr': {{ fixer.GBPIDR }},
                    'gbpeur': {{ fixer.GBPEUR }},
                    'czkidr': {{ fixer.CZKIDR }},
                    'czkeur': {{ fixer.CZKEUR }}
                }
            };

            var EuropeTravelsApp = {
                initialize: function ($wrapper) {
                    this.$wrapper = $wrapper;

                    this.$wrapper.find('.js-menu-item').on(
                        'click',
                        this.handleMenuItemClick
                    );

                    this.$wrapper.find('.js-form-menu-item').on(
                        'click',
                        this.handleFormMenuItemClick
                    );

                    this.$wrapper.find('.js-payment-status-row').on(
                        'click',
                        this.handleRowTitleClick
                    );

                    this.$wrapper.find('form').on(
                        'submit',
                        this.handleFormSubmit
                    );

                    this.$wrapper.find('.js-item-card-title').on(
                        'click',
                        this.handleCardTitleClick
                    );

                    this.$wrapper.find('.js-item-title').on(
                        'click',
                        this.handleTitleClick
                    );

                    this.$wrapper.find('.js-costs').on(
                        'click',
                        this.handleCostsClick
                    );

                    this.$wrapper.find('.js-payment-status-item').on(
                        'click',
                        this.handlePaymentStatusChange
                    );

                    this.$wrapper.find('.js-document-wrapper').on(
                        'click',
                        '.js-remove-document',
                        this.handleFormDocumentRemove
                    );

                    this.$wrapper.find('.js-document-add').on(
                        'click',
                        this.handleFormDocumentAdd
                    );

                    this.$wrapper.find('.js-payment-status-buttons-wrapper').find('button').on(
                        'click',
                        this.handlePaymentChange
                    );
                },

                handlePaymentChange: function(e) {

                    var $wrapper = $('.js-payment-status-wrapper');
                    switch (e.currentTarget.innerText) {
                        case 'Base':
                            $wrapper.find('.js-payment-status-list-item').each(
                                function () {
                                    $(this).text($(this).data('costs-base'))
                                }
                            );
                            break;
                        case 'IDR':
                            $wrapper.find('.js-payment-status-list-item').each(
                                function () {
                                    $(this).text($(this).data('costs-idr'));
                                }
                            );
                            $wrapper.find('.js-payment-status-total').each(
                                function () {
                                    $(this).text($(this).data('total-idr'))
                                }
                            );
                            break;
                        case 'EUR':
                            $wrapper.find('.js-payment-status-list-item').each(
                                function () {
                                    $(this).text($(this).data('costs-eur'))
                                }
                            );
                            $wrapper.find('.js-payment-status-total').each(
                                function () {
                                    $(this).text($(this).data('total-eur'))
                                }
                            );
                            break;

                    }
                },

                handleMenuItemClick: function (e) {

                    if (e.currentTarget.innerText === 'payments' && variables.changes.paymentStatusList === true) {
                        RenewApp.paymentStatusList();
                    } else if (e.currentTarget.innerText === 'itinerary' && variables.changes.itinerary === true) {
                        RenewApp.itinerary();
                    }

                    $(this).next('div').slideToggle();
                    $(this).parent().siblings().children().next().slideUp();
                },

                handleFormMenuItemClick: function () {
                    $(this).next().find('.js-form-item').slideToggle();
                },

                handleRowTitleClick: function () {
                    var $next = $(this).next();
                    $next.slideToggle();
                    $next.find('.js-item-card-title').click();
                },

                handleFormSubmit: function (e) {
                    e.preventDefault();

                    $.ajax({
                        url: $(this).closest('div').data('url'),
                        data: new FormData($(this)[0]),
                        method: 'POST',
                        processData: false,
                        contentType: false,
                        cache: false,
                        success: function (object) {
                            RenewApp.switcher(object.toLowerCase())
                        }
                    })
                },

                handleCardTitleClick: function() {
                    $(this).next().slideToggle();
                },

                handleTitleClick: function() {
                    $(this).next().next().slideToggle();
                },

                handleCostsClick: function () {
                    var self = $(this);
                    var costs = self.data('base-costs');

                    switch (self.data('base-currency') + self.data('show-currency')) {
                        case 'EUREUR':
                            self.text('IDR ' + (costs * variables.rates.euridr).toLocaleString());
                            self.data('show-currency', 'IDR');
                            break;
                        case 'EURIDR':
                            self.text('â‚¬ ' + costs);
                            self.data('show-currency', 'EUR');
                            break;
                        case 'GBPGBP':
                            self.text('IDR ' + (costs * variables.rates.gbpidr).toLocaleString());
                            self.data('show-currency', 'IDR');
                            break;
                        case 'GBPIDR':
                            self.text('â‚¬ ' + (costs * variables.rates.gbpeur).toLocaleString());
                            self.data('show-currency', 'EUR');
                            break;
                        case 'GBPEUR':
                            self.text('Â£ ' + costs);
                            self.data('show-currency', 'GBP');
                            break;
                        case 'CZKCZK':
                            self.text('IDR ' + (costs * variables.rates.czkidr).toLocaleString());
                            self.data('show-currency', 'IDR');
                            break;
                        case 'CZKIDR':
                            self.text('â‚¬ ' + (costs * variables.rates.czkeur).toLocaleString());
                            self.data('show-currency', 'EUR');
                            break;
                        case 'CZKEUR':
                            self.text('CZK ' + costs);
                            self.data('show-currency', 'CZK');
                            break;
                        case 'IDRIDR':
                            self.text('â‚¬ ' + (costs / variables.rates.euridr).toLocaleString());
                            self.data('show-currency', 'EUR');
                            break;
                        case 'IDREUR':
                            self.text('IDR ' + costs);
                            self.data('show-currency', 'IDR');
                            break;
                    }
                },

                handlePaymentStatusChange: function(e) {
                    e.preventDefault();

                    var $self = $(this);
                    var paymentStatus = $(this).text();
                    var id = $(this).closest('div').data('id');

                    $.ajax({
                        url: '/api/payment-status',
                        data: {
                            'id': id,
                            'paymentStatus': paymentStatus
                        },
                        method: 'POST',
                        success: function () {
                            $('#btnGroupDropCollection' + id).text(paymentStatus);
                            $('#btnGroupDropItinerary' + id).text(paymentStatus);
                            if ($self.closest('.js-menu-item-wrapper').find('.js-menu-item').text() === 'payments') {
                                RenewApp.paymentStatusList();
                            } else {
                                variables.changes.paymentStatusList = true;
                            }
                        }
                    })
                },

                handleFormDocumentRemove: function(e) {
                    e.preventDefault();
                    $(this).closest('.js-document-item').remove();
                },

                handleFormDocumentAdd: function (e) {
                    e.preventDefault();

                    var $documentWrapper = $(this).closest('.js-document-wrapper');
                    var prototype = $documentWrapper.data('prototype');
                    var index = $documentWrapper.data('index');
                    var newForm = prototype.replace(/__name__/g, index);
                    $documentWrapper.data('index', index + 1);
                    $(this).before(newForm);

                }

            };

            var RenewApp = {
                switcher: function(object) {
                    switch (object) {
                        case 'transport':
                        case 'hotel':
                        case 'attraction':
                            RenewApp.collection(object);
                            EuropeTravelsApp.changes.itinerary = true;
                            break;
                        case 'payment':
                            RenewApp.paymentStatusList();
                            break;
                        case 'document':
                            RenewApp.documentList();
                            break;
                    }
                },

                collection: function (entity) {
                    $.ajax({
                        url: "/api/renew/" + entity,
                        success: function (response) {
                            var $wrapper = EuropeTravelsApp.$wrapper.find('.js-' + entity + '-wrapper');
                            $wrapper.html(response);

                            $wrapper.find('.js-item-card-title').on(
                                'click',
                                EuropeTravelsApp.handleCardTitleClick
                            );

                            $wrapper.find('.js-payment-status-item').on(
                                'click',
                                EuropeTravelsApp.handlePaymentStatusChange
                            );

                            $wrapper.find('.js-costs').on(
                                'click',
                                EuropeTravelsApp.handleCostsClick
                            );

                        }
                    })
                },

                paymentStatusList: function() {
                    $.ajax({
                        url: "/api/renew/payment",
                        success: function (response) {
                            var $wrapper = EuropeTravelsApp.$wrapper.find('.js-payment-status-list-wrapper');
                            $wrapper.html(response);

                            $wrapper.find('.js-payment-status-row').on(
                                'click',
                                EuropeTravelsApp.handleRowTitleClick
                            );

                            $wrapper.find('.js-item-card-title').on(
                                'click',
                                EuropeTravelsApp.handleCardTitleClick
                            );

                            $wrapper.find('.js-payment-status-item').on(
                                'click',
                                EuropeTravelsApp.handlePaymentStatusChange
                            );

                            $wrapper.find('.js-costs').on(
                                'click',
                                EuropeTravelsApp.handleCostsClick
                            );

                            variables.changes.paymentStatusList = false;
                        }
                    })
                },

                itinerary: function() {
                    $.ajax({
                        url: "/api/renew/itinerary",
                        success: function (response) {
                            var $wrapper = EuropeTravelsApp.$wrapper.find('.js-itinerary-wrapper');
                            $wrapper.html(response);

                            $wrapper.find('.js-item-card-title').on(
                                'click',
                                EuropeTravelsApp.handleCardTitleClick
                            );

                            $wrapper.find('.js-payment-status-item').on(
                                'click',
                                EuropeTravelsApp.handlePaymentStatusChange
                            );

                            $wrapper.find('.js-costs').on(
                                'click',
                                EuropeTravelsApp.handleCostsClick
                            );

                            variables.changes.paymentStatusList = false;
                        }
                    })
                },

                documentList: function () {
                    $.ajax({
                        url: "api/renew/document",
                        success: function (response) {
                            EuropeTravelsApp.$wrapper.find('.js-document-wrapper').html(response);
                        }
                    })
                }
            };

            $(document).ready(function() {
                var $menu = $('.js-menu');
                EuropeTravelsApp.initialize($menu);
            });
        </script>
    {% endblock %}